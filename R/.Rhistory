library(methylKit)
hmc.file=system.file("extdata", "test1.myCpG.txt", package = "methylKit")
mc.file=system.file("extdata", "test2.myCpG.txt", package = "methylKit")
my5hmC=read( hmc.file,sample.id="hmc",assembly="hg18")
my5mC=read( mc.file,sample.id="hmc",assembly="hg18")
my5hmC=read( hmc.file,sample.id="hmc",assembly="hg18")
my5mC=read( mc.file,sample.id="mc",assembly="hg18")
adjusted.5mC=adjust.methylC(my5mC,my5hmC)
adjusted.5mC
data(methylKit)
fix(methylBase.obj)
methylRawList.obj[[1]][1,]
methylRawList.obj[[1]][1:10,]
methylRawList.obj[[2]][1:10,]
seq(9764513,1,2)
?seq
seq(from=9764513,by=3000,length.out=50)
seq(from=9764513,by=10000,length.out=50)
seq(from=9764513,by=10000,length.out=20)
my.win=GRanges(seqnames="chr1",ranges=IRanges(start=seq(from=9764513,by=10000,length.out=20),width=5000) )
library(GenomicRanges)
my.win=GRanges(seqnames="chr1",ranges=IRanges(start=seq(from=9764513,by=10000,length.out=20),width=5000) )
my.win
my.win=GRanges(seqnames="chr21",ranges=IRanges(start=seq(from=9764513,by=10000,length.out=20),width=5000) )
regional.methylRaw=regionCounts(methylObj=methylRawList.obj, regions=my.win, cov.bases=0,strand.aware=FALSE)
regional.methylRaw
tiled.methylRaw=tileMethylCounts(methylObj=methylRawList.obj,win.size=1000,step.size=1000,cov.bases=0)
my.file=system.file("extdata", "test.fastq_bismark.sorted.min.sam", package = "methylKit")
obj=read.bismark("my.file","test",assembly="hg18",save.folder="NULL",save.context="CpG",read.context="CpG")
my.file
obj=read.bismark(my.file,"test",assembly="hg18",save.folder="NULL",save.context="CpG",read.context="CpG")
file.list2=list(system.file("extdata", "test.fastq_bismark.sorted.min.sam", package = "methylKit"),
system.file("extdata", "test.fastq_bismark.sorted.min.sam", package = "methylKit"),
system.file("extdata", "test.fastq_bismark.sorted.min.sam", package = "methylKit"),
system.file("extdata", "test.fastq_bismark.sorted.min.sam", package = "methylKit"))
objs=read.bismark(location=file.list2,sample.id=list("test1","test2","ctrl1","ctrl1"),assembly="hg18",save.folder=NULL,save.context=NULL,read.context="CpG",nolap=FALSE,mincov=10,minqual=20,phred64=FALSE,treatment=c(1,1,0,0))
obj=read.bismark(my.file,"test",assembly="hg18",save.folder=NULL,save.context="CpG",read.context="CpG")
mat=percMethylation(methylBase.obj)
head(mat)
my.diffMeth=calculateDiffMeth(methylBase.obj,slim=TRUE,weigthed.mean=TRUE,num.cores=1)
?p.adjust
my.diffMeth2=calculateDiffMeth(methylBase.obj,slim=TRUE,weigthed.mean=TRUE,num.cores=1)
my.diffMeth2=calculateDiffMeth(pooled.methylBase,slim=TRUE,weigthed.mean=TRUE,num.cores=1)
pooled.methylBase=pool(methylBase.obj,sample.ids=c("test","control"))
my.diffMeth2=calculateDiffMeth(pooled.methylBase,slim=TRUE,weigthed.mean=TRUE,num.cores=1)
all.diff=get.methylDiff(methylDiff.obj,difference=25,qvalue=0.01,type="all")
diffMethPerChr(methylDiff.obj, plot=FALSE,qvalue.cutoff=0.01, meth.cutoff=25,exclude=NULL)
clusterSamples(methylBase.obj, dist="correlation", method="ward", plot=TRUE)
?prcomp
PCASamples(methylBase.obj,screeplot=FALSE, adj.lim=c(0.0004,0.1),scale=TRUE,center=TRUE,comp=c(1,2),transpose=TRUE,sd.threshold=0,obj.return=FALSE)
methylBase.obj@treatment
bedgraph(methylDiff.obj,file.name="test.bed",col.name="meth.diff",unmeth=FALSE,log.transform=FALSE,negative=FALSE,add.on="")
bedgraph(methylRawList.obj[[1]],file.name="test2.bed",col.name="perc.meth",unmeth=FALSE,log.transform=FALSE,negative=FALSE,add.on="")
unlink("test2.bed")
?DataFrame
filtered1=filterByCoverage(methylRawList.obj,lo.count=NULL,lo.perc=NULL,hi.count=500,hi.perc=NULL)
filtered2=filterByCoverage(methylRawList.obj,lo.count=NULL,lo.perc=NULL,hi.count=NULL,hi.perc=99.9)
showClass("DataTable")
showClass("methylRaw")
showClass("methylBase")
?merge
my.methylBase=unite(methylRaw.obj)
unite(methylRawList.obj)
my.methylBase=unite(methylRawList.objdestrand=TRUE)
getCorrelation(methylBase.obj,method="pearson",plot=FALSE)
getCoverageStats(methylRawList.obj[[1]],plot=FALSE,both.strands=FALSE,labels=TRUE)
getCoverageStats(methylRawList.obj[[1]],plot=TRUE,both.strands=FALSE,labels=TRUE)
?hist
getMethylationStats(methylRawList.obj[[1]],plot=TRUE,both.strands=FALSE,labels=TRUE)
getAssembly(methylBase.obj)
#' getAssembly(methylDiff.obj)
getAssembly(methylDiff.obj)
getAssembly(methylRawList.obj[[1]])
?head
head( getContext(methylDiff.obj))
head( getData(methylDiff.obj))
head(getData(methylRawList.obj[[1]]))
my.gr=as(methylRawList.obj[[1]],"GRanges")
?as
?
list
my.gr=as(methylBase.obj,"GRanges")
library(roxygen2)
roxygenise("~/Dropbox/PAPERS/R-devel/methylKit",roclets = c("rd"))
system.file("extdata", "refseq.hg18.bed.txt", package = "methylKit")
dir("/Users/altuna/R/methylKit/extdata/")
bed.file=system.file("extdata", "refseq.hg18.bed.txt", package = "methylKit")
bed.file=system.file("extdata", "cpgi.hg18.bed.txt", package = "methylKit")
bed.gr=read.bed(location=bed.file,remove.unsual=TRUE)
bed.flanks=getFlanks(bed.gr,flank=2000,clean=T)
gene.obj=read.transcript.features(system.file("extdata", "refseq.hg18.bed.txt", package = "methylKit"))
annotate.WithGenicParts(methylDiff.obj,gene.obj)
gene.obj
methylDiff.obj
as(methylDiff.obj,"GRanges")
library(GenomicRanges)
as(methylDiff.obj,"GRanges")
as(methylBase.obj,"GRanges")
methylKit::as(methylBase.obj,"GRanges")
