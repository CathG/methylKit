%\VignetteIndexEntry{methylKit: User guide}
%\VignetteKeywords{methylBase, methylRaw, calculateDiffMeth}
%\VignettePackage{methylKit}


\documentclass[a4paper]{article}
\title{ methylKit: User guide}
\usepackage{url}               % used in bibliography
\usepackage[superscript,nomove]{cite} % use if \cite is used and superscripts wanted
\author{Altuna Akalin}
\begin{document}
\bibliographystyle{unsrt}
\maketitle

\section{Introduction}
In this manual, we will show how to use the methylKit package. methylKit is an R package for analysis and annotation of DNA methylation information obtained by high-throughput bisulfite sequencing. The package is designed to deal with sequencing data from RRBS and its variants. But it can potentially handle whole-genome bisulfite sequencing data if proper input format is provided. 

\section{Basics}
\subsection{Reading the methylation call files}
We start by reading in the methylation call data from bisulfite sequencing with \texttt{read} function. Reading in the data this way will return a methylRawList object which stores methylation information per sample.

<<>>=
library(methylKit)
file.list=list( system.file("extdata", "test1.myCpG.txt", package = "methylKit"),
                system.file("extdata", "test2.myCpG.txt", package = "methylKit"),
                system.file("extdata", "control1.myCpG.txt", package = "methylKit"),
                system.file("extdata", "control2.myCpG.txt", package = "methylKit") )


# read the files to a methylRawList object: myobj
myobj=read(file.list,
           sample.id=list("test1","test2","ctrl1","ctrl2"),
           assembly="hg18",
           pipeline="amp",
           treatment=c(1,1,0,0))


@

\subsection{Descriptive statistics on samples}
Since we read the data now, we can check the basic stats about the methylation data such as coverage and percent  methylation. We now have a \texttt{methylRawList} object which contains methylation information per sample. The following command prints out percent methylation statistics for second sample: "test2"

<<>>=
getMethylationStats(myobj[[2]],plot=F,both.strands=F)
@

The following command plots the histogram for percent methylation distribution.The figure below is the histogram and numbers on bars denote what percentage of locations are contained in that bin. Typically, percent methylation histogram should have two peaks on both ends. In any given cell, any given base are either methylated or not. Therefore, looking at many cells should yield a similar pattern where we see lots of locations with high methylation and lots of locations with low methylation.


\begin{center}
<<fig=TRUE , echo =TRUE >>=
library("graphics")
getMethylationStats(myobj[[2]],plot=T,both.strands=F)
@
\end{center}



We can also plot the read coverage per base information in a similar way, again numbers on bars denote what percentage of locations are contained in that bin. Experiments that are highly suffering from PCR duplication bias will have a secondary peak towards the right hand side of the histogram.


\begin{center}
<<fig=TRUE , echo =TRUE >>=
library ("graphics")
getCoverageStats(myobj[[2]],plot=T,both.strands=F)
@
\end{center}

\subsection{Filtering samples based on read coverage}
It might be useful to filter samples based on coverage. Particularly, if our samples are suffering from PCR bias it would be useful to discard bases with very high read coverage. Furthermore, we would also like to discard bases that have low read coverage, a high enough read coverage will increase the power of the statistical tests. The code below filters a \texttt{methylRawList} and discards bases that have coverage below 10X and also discards the bases that have more than 99.9th percentile of coverage in each sample.

<<>>=
filtered.myobj=filterByCoverage(myobj,lo.count=10,lo.perc=NULL,
                                      hi.count=NULL,hi.perc=99.9)
@


\section{Comparative analysis}
\subsection{Merging samples}

In order to do further analysis, we will need to get the bases covered in all samples. The following function will merge all samples to one object for base-pair locations that are covered in all samples. Setting destrand=TRUE (the default is FALSE) will merge reads on both strands of a CpG dinucleotide. This provides better coverage, but only advised when looking at CpG methylation (for CpH methylation this will cause wrong results in subsequent analyses). This operation will return a methylBase object which will be our main object for all comparative analysis.
<<>>=
meth=unite(myobj,destrand=FALSE)
@

Let us take a look at the data content of methylBase object:
<<>>=
head(meth)
@

\subsection{Sample Correlation}
We can check the correlation between samples using \texttt{getCorrelation}. This function will either plot scatter plot and correlation coefficients or just print a correlation matrix

\begin{center}
<<fig=TRUE , echo =TRUE >>=
getCorrelation(meth,plot=T)
@
\end{center}

\subsection{Clustering samples}
We can cluster the samples based on the similarity of their methylation profiles. The following function will cluster the samples and draw a dendrogram.
\begin{center}
<<fig=TRUE , echo =TRUE >>=
clusterSamples(meth, dist="correlation", method="ward", plot=TRUE)
@
\end{center}

Setting the plot=FALSE will return a dendrogram object which can be manipulated by users or fed in to other user functions that can work with dendrograms.
<<>>=
hc = clusterSamples(meth, dist="correlation", method="ward", plot=FALSE)
@
We can also do a PCA analysis on our samples. The following function will plot a scree plot for importance of components.
\begin{center}
<<fig=TRUE , echo =TRUE >>=
PCASamples(meth, screeplot=TRUE)
@
\end{center}
We can also plot PC1 and PC2 axis and a scatter plot of our samples on those axis which will reveal how they cluster.
\begin{center}
<<fig=TRUE , echo =TRUE >>=
PCASamples(meth)
@
\end{center}


\subsection{Tiling windows analysis}
For some situations, it might be desirable to summarize methylation information over tiling windows rather than doing base-pair resolution analysis. \texttt{methylKit} provides functionality to do such analysis. The function below tiles the genome with windows 1000bp length and 1000bp step-size and summarizes the methylation information on those tiles. In this case, it returns a \texttt{methylRawList} object which can be fed into \texttt{unite} and \texttt{calculateDiffMeth} functions to get differentially methylated regions

<<>>=
tiles=tileMethylCounts(myobj,win.size=1000,step.size=1000)
head(tiles[[1]])
@

\subsection{Finding differentially methylated bases or regions}
\texttt{calculateDiffMeth()} function is the main function to calculate differential methylation. Depending on the sample size per each set it will either use Fisher's exact or logistic regression to calculate P-values. P-values will be adjusted to Q-values using SLIM method \cite{Wang2011a}.
<<>>=
myDiff=calculateDiffMeth(meth)
@

After q-value calculation, we can select the differentially methylated regions/bases based on q-value and percent methylation difference cutoffs. Following bit selects the bases that have q-value<0.01 and percent methylation difference larger than 25\%. If you specify \texttt{type="hyper"} or \texttt{type="hypo"} options, you will get hyper-methylated or hypo-methylated regions/bases.
<<>>=
# get hyper methylated bases
myDiff25p.hyper=get.methylDiff(myDiff,difference=25,qvalue=0.01,type="hyper")
#
# get hypo methylated bases
myDiff25p.hypo=get.methylDiff(myDiff,difference=25,qvalue=0.01,type="hypo")
#
#
# get all differentially methylated bases
myDiff25p=get.methylDiff(myDiff,difference=25,qvalue=0.01)
@

We can also visualize the distribution of hypo/hyper-methylated bases/regions per chromosome using the following function. In this case, the example set includes only one chromosome. The \texttt{list} shows percentages of hypo/hyper methylated bases over all the covered bases in a given chromosome.

 
<<>>=
diffMethPerChr(myDiff,plot=FALSE,qvalue.cutoff=0.01, meth.cutoff=25)
@
 

\section{Annotating differentially methylated bases or regions}
We can annotate our differentially methylated regions/bases based on gene annotation. In this example, we read the gene annotation from a bed file and annotate our differentially methylated regions with that information. This will tell us what percentage of our differentially methylated regions are on promoters/introns/exons/intergenic region. Similar gene annotation can be fetched using \texttt{GenomicFeatures} package available from Bioconductor.org.

<<>>=
gene.obj=read.transcript.features(system.file("extdata", "refseq.hg18.bed.txt", 
                                           package = "methylKit"))
#
# annotate differentially methylated Cs with promoter/exon/intron using annotation data
#
annotate.WithGenicParts(myDiff25p,gene.obj)
@

Similarly, we can read the CpG island annotation and annotate our differentially methylated bases/regions with them.

<<>>=
# read the shores and flanking regions and name the flanks as shores 
# and CpG islands as CpGi
cpg.obj=read.feature.flank(system.file("extdata", "cpgi.hg18.bed.txt", 
                                        package = "methylKit"),
                           feature.flank.name=c("CpGi","shores"))
#
#
diffCpGann=annotate.WithFeature.Flank(myDiff25p,cpg.obj$CpGi,cpg.obj$shores,
                                      feature.name="CpGi",flank.name="shores")
@


\subsection{Regional analysis}
We can also summarize methylation information over a set of defined regions such as promoters or CpG islands. The function below summarizes the methylation information over a given set of promoter regions and outputs a \texttt{methylRaw} or \texttt{methylRawList} object depending on the input.

<<>>=
promoters=regionCounts(myobj,gene.obj$promoters)

head(promoters[[1]])
@



\subsection{Convenience functions for annotation objects}
After getting the annotation of differentially methylated regions, we can get the distance to TSS and nearest gene name using the \texttt{getAssociationWithTSS} function.

<<>>=
diffAnn=annotate.WithGenicParts(myDiff25p,gene.obj)

# target.row is the row number in myDiff25p
head(getAssociationWithTSS(diffAnn))
@

It is also desirable to get percentage/number of differentially methylated regions that overlap with intron/exon/promoters

<<>>=
getTargetAnnotationStats(diffAnn,percentage=TRUE,precedence=TRUE)
@

We can also plot the percentage of differentially methylated bases overlapping with exon/intron/promoters

\begin{center}
<<fig=TRUE , echo =TRUE>>=
plotTargetAnnotation(diffAnn,precedence=TRUE,
    main="differential methylation annotation")
@
\end{center}

We can also plot the CpG island annotation the same way. The plot below shows what percentage of differentially methylated bases are on CpG islands, CpG island shores and other regions.

\begin{center}
<<fig=TRUE , echo =TRUE>>=
plotTargetAnnotation(diffCpGann,col=c("green","gray","white"),
       main="differential methylation annotation")
@
\end{center}

It might be also useful to get percentage of intron/exon/promoters that overlap with differentially methylated bases.

<<>>=
getFeatsWithTargetsStats(diffAnn,percentage=TRUE)
@



\bibliography{Vignette_methylKit.bib}
\end{document}


